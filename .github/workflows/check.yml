name: check

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
          key: >-
            ${{ runner.os }} pip
            ${{ hashFiles('requirements-dev.txt', 'requirements-test.txt') }}
      - run: |
          python3 -m venv venv
          source venv/bin/activate
          python3 -m pip install -Ur requirements-dev.txt
      - uses: pre-commit/action@v2.0.3

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - "3.5"
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11.0-alpha - 3.11"
          - "pypy3"
        include:
          - python-version: "3.3"
            os: ubuntu-18.04
          - python-version: "3.4"
            os: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
            .tox
          key: >-
            ${{ runner.os }} pip ${{ matrix.python-version }}
            ${{ hashFiles('requirements-test.txt', 'tox.ini') }}
      - run: |
          set -euxo pipefail
          if [ "${{ matrix.python-version }}" = 3.3 ]; then
              python3 -m pip install -U \
                  "tox<3" "pluggy<0.10" "setuptools<40" "virtualenv<15.2"
              tox -e py33  # no support for --skip-missing-interpreters false
          else
              python3 -m pip install -U tox codecov
              # We could use tox-gh-actions for this, but that'd result in
              # a whole separate redundant section of versions to maintain;
              # with this approach the matrix alone is enough.
              tox --skip-missing-interpreters false -e py$(
                  # "s/^.* //" for cases like "3.10.0-alpha - 3.10"
                  echo "${{ matrix.python-version }}" | \
                      sed -e "s/^.* //" -e "s/\.//" -e s/^py//
              )
              codecov -X gcov
          fi
        env:
          PYTEST_ADDOPTS: --color=yes
          TOX_TESTENV_PASSENV: PYTEST_ADDOPTS
